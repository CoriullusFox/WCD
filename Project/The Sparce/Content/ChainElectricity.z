class ChainElectricity : ZilchComponent
{
    
    var Cooldown : Real = 0;
    
    [Property]
    var Bullet : Archetype = Archetype.Bullet_Beam;
    
    var FreezTimer : Real = 0;
    
    [Property]
    var Damage : Real = 50;
    
    [Property]
    var EnergyUse : Real = 5;
    
    [Property]
    var Energy : Real = 100;
    
    [Property]
    var CooldownMax : Real = 5;
    
    [Property]
    var Player : Boolean = false;
    
    [Property]
    var CamZoom : Real = 20;
    
    
    function Initialize(init : CogInitializer)
    {
        this.LevelSettings.CameraViewport.Camera.Camera.Size = this.CamZoom;
        Zero.Connect(this.Owner, Events.Shoot, this.OnShoot);
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(this.GameSession, Events.Energy, this.OnEnergy);
    }

    function OnEnergy(event : Energy)
    {
        this.Energy = event.Energy;
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        //Cooldown logic
        this.Cooldown += event.Dt;
        if(this.Player)
        {
            var toSend = Cooldown();
            toSend.Cooldown = this.CooldownMax - this.Cooldown;
            toSend.MaxCooldown = this.CooldownMax;
            this.GameSession.DispatchEvent(Events.Cooldown, toSend);
        }
        
        //don't allow movement when beam is firing
        if(this.FreezTimer > 0)
        {
            this.FreezTimer -= event.Dt;
            this.Owner.RigidBody.Velocity = Real3(0,0,0);
        }
    }

    function OnShoot(event : Shoot)
    {
        this.Player = event.Player;
        //only shoot if cooldown is over
        if(this.Cooldown >= this.CooldownMax && this.Energy >= this.EnergyUse)
        {
            if(this.Player)
            {
                //use energy
                this.Owner.EnergyStor.Energy -= this.EnergyUse;
            }
            
            this.FreezTimer = 2;
            this.Cooldown = 0;
            /** SHOOTING LOGIC HERE **/
            
            
            
            
            
            
            
        }
    }
}
