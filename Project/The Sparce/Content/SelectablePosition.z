class SelectablePosition : ZilchComponent
{
    [Property]
    var PositionDirection : Real3 = Real3(0.0, 0.0, 0.0);
    
    [Property]
    var MaxPosition : Real3 = Real3(0.0, 0.0, 0.0);
    
    [Property]
    var MinPosition : Real3 = Real3(0.0, 0.0, 0.0);
    
    [Property]
    var PositionSpeed : Real = 1.0;
    
    var Touching : Boolean = false;
    
    function Initialize(init : CogInitializer)
    {
        
        Math.Normalize(this.PositionDirection);
        
        Zero.Connect(this.Owner, Events.MouseEnter, this.OnMouseEnter);
        
        Zero.Connect(this.Owner, Events.MouseExit, this.OnMouseExit);
        
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        
        if(this.Touching)
        {
            while(this.Owner.Transform.Translation.X < this.MaxPosition.X && this.Owner.Transform.Translation.Y < this.MaxPosition.Y)
            {
                this.Owner.Transform.Translation += this.PositionDirection * event.Dt * this.PositionSpeed;
            }
        }
        else
        {
            while(this.Owner.Transform.Translation.X > this.MinPosition.X && this.Owner.Transform.Translation.Y > this.MinPosition.Y)
            {
                this.Owner.Transform.Translation -= this.PositionDirection * event.Dt * this.PositionSpeed;
            }
        }
        
    }

    function OnMouseExit(event : ViewportMouseEvent)
    {
        this.Touching = false;
    }

    function OnMouseEnter(event : ViewportMouseEvent)
    {
        this.Touching = true;
    }
}
