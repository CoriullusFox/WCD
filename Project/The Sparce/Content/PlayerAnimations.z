/* ----------------------------------------------------------------------------
** TEAM - We Couldn't Decide
** © 2017 DigiPen Institute of Technology, All Rights Reserved.
**
** FILE NAME
**
** Author:
** - Sage Dupuy
**
** Contributors:
** - Brandon Wolenetz, Hudson Green
** --------------------------------------------------------------------------*/

class PlayerAnimations : ZilchComponent
{
    [Property]
    var North : SpriteSource = null;
    [Property]
    var NorthEast : SpriteSource = null;
    [Property]
    var East : SpriteSource = null;
    [Property]
    var SouthEast : SpriteSource = null;
    [Property]
    var South : SpriteSource = null;
    [Property]
    var SouthWest : SpriteSource = null;
    [Property]
    var West : SpriteSource = null;
    [Property]
    var NorthWest : SpriteSource = null;
    
    /*[Property]
    var WeaponNorth : SpriteSource = null;
    [Property]
    var WeaponNorthEast : SpriteSource = null;
    [Property]
    var WeaponEast : SpriteSource = null;
    [Property]
    var WeaponSouthEast : SpriteSource = null;
    [Property]
    var WeaponSouth : SpriteSource = null;
    [Property]
    var WeaponSouthWest : SpriteSource = null;
    [Property]
    var WeaponWest : SpriteSource = null;
    [Property]
    var WeaponNorthWest : SpriteSource = null;*/
    
    var DirectionFrame : Integer = 1;
    
    [Property]
    var CurrentWalkingAnimationSpeed : Integer = 2;
    
    var WalkingAnimationSpeed : Integer = 0;
    
    [Property]
    var CurrentRunningAnimationSpeed : Integer = 4;
    
    var RunningAnimationSpeed : Integer = 4;
    
    var WeaponS : CogPath = CogPath("Weapon");
    
    var Shooting : Boolean = false;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.GameSession, Events.SelectedGun, this.WeaponChange);
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(this.Owner, Events.Shoot, this.OnShoot);
    }

    function OnShoot(event : Shoot)
    {
        this.Shooting = true;
    }

    function WeaponChange(event : SelectedGun)
    {
        
        var selectedWeaponSprite = "Weapon_`event.Selected`";
        var selectedWeapon = this.Owner.FindChildByName("Weapon");
        
        selectedWeapon.Sprite.SpriteSource = SpriteSource.Find(selectedWeaponSprite);
        selectedWeapon.Sprite.AnimationActive = false;
        selectedWeapon.Sprite.CurrentFrame = 6;
        
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        
        var selectedWeapon = this.Owner.FindChildByName("Weapon");
        
        this.WalkingAnimationSpeed = this.CurrentWalkingAnimationSpeed;
        
        if(Zero.Keyboard.KeyIsDown(Keys.Shift))
        {
            this.Owner.Sprite.AnimationSpeed = this.RunningAnimationSpeed;
        }
        else
        {
            this.Owner.Sprite.AnimationSpeed = this.WalkingAnimationSpeed;
        }
        if(!this.Shooting)
        {
            if(Zero.Keyboard.KeyIsDown(Keys.A) && Zero.Keyboard.KeyIsDown(Keys.S))
            {
                this.Owner.Sprite.AnimationActive = true;
                
                selectedWeapon.Sprite.CurrentFrame = 5;
                
                if(this.Owner.Sprite.SpriteSource != this.SouthWest && !this.Shooting)
                {
                    this.Owner.Sprite.SpriteSource = this.SouthWest;
                }
            }
            else if(Zero.Keyboard.KeyIsDown(Keys.D) && Zero.Keyboard.KeyIsDown(Keys.S))
            {
                this.Owner.Sprite.AnimationActive = true;
                
                selectedWeapon.Sprite.CurrentFrame = 7;
                
                if(this.Owner.Sprite.SpriteSource != this.SouthEast && !this.Shooting)
                {
                    this.Owner.Sprite.SpriteSource = this.SouthEast;
                }
            }
            else if(Zero.Keyboard.KeyIsDown(Keys.A) && Zero.Keyboard.KeyIsDown(Keys.W))
            {
                this.Owner.Sprite.AnimationActive = true;
                
                selectedWeapon.Sprite.CurrentFrame = 3;
                
                if(this.Owner.Sprite.SpriteSource != this.NorthWest && !this.Shooting)
                {
                    this.Owner.Sprite.SpriteSource = this.NorthWest;
                }
            }
            else if(Zero.Keyboard.KeyIsDown(Keys.D) && Zero.Keyboard.KeyIsDown(Keys.W))
            {
                this.Owner.Sprite.AnimationActive = true;
                
                selectedWeapon.Sprite.CurrentFrame = 1;
                
                if(this.Owner.Sprite.SpriteSource != this.NorthEast && !this.Shooting)
                {
                    this.Owner.Sprite.SpriteSource = this.NorthEast;
                }
            }
            else if(Zero.Keyboard.KeyIsDown(Keys.W))
            {
                this.Owner.Sprite.AnimationActive = true;
                
                selectedWeapon.Sprite.CurrentFrame = 2;
                
                if(this.Owner.Sprite.SpriteSource != this.North && !this.Shooting)
                {
                    this.Owner.Sprite.SpriteSource = this.North;
                }
            }
            else if(Zero.Keyboard.KeyIsDown(Keys.A))
            {
                this.Owner.Sprite.AnimationActive = true;
                
                selectedWeapon.Sprite.CurrentFrame = 4;
                
                if(this.Owner.Sprite.SpriteSource != this.West && !this.Shooting)
                {
                    this.Owner.Sprite.SpriteSource = this.West;
                }
            }
            else if(Zero.Keyboard.KeyIsDown(Keys.S))
            {
                this.Owner.Sprite.AnimationActive = true;
                
                selectedWeapon.Sprite.CurrentFrame = 6;
                
                if(this.Owner.Sprite.SpriteSource != this.South && !this.Shooting)
                {
                    this.Owner.Sprite.SpriteSource = this.South;
                }
            }
            else if(Zero.Keyboard.KeyIsDown(Keys.D))
            {
                this.Owner.Sprite.AnimationActive = true;
                
                selectedWeapon.Sprite.CurrentFrame = 0;
                
                if(this.Owner.Sprite.SpriteSource != this.East && !this.Shooting)
                {
                    this.Owner.Sprite.SpriteSource = this.East;
                }
            }
            else
            {
                this.Owner.Sprite.AnimationActive = false;
                
                //this.Owner.Sprite.CurrentFrame = 4;
            }
        }
        
        
        if(this.Shooting)
        {
            if(Zero.Keyboard.KeyIsDown(Keys.W) || Zero.Keyboard.KeyIsDown(Keys.A) || Zero.Keyboard.KeyIsDown(Keys.S) || Zero.Keyboard.KeyIsDown(Keys.D))
            {
                this.Owner.Sprite.AnimationActive = true;
            }
            else
            {
                this.Owner.Sprite.AnimationActive = false;
            }
            var angle = Math.Angle2D(this.Owner.PlayerShooting.Direction);
            if(angle > -0.25 && angle < 0.25 && this.Owner.Sprite.SpriteSource != this.East)
            {
                
                this.Owner.Sprite.SpriteSource = this.East;
                selectedWeapon.Sprite.CurrentFrame = 0;
                
            }
            else if(angle > 0.25 && angle < 1.25 && this.Owner.Sprite.SpriteSource != this.NorthEast)
            {
                
                this.Owner.Sprite.SpriteSource = this.NorthEast;
                selectedWeapon.Sprite.CurrentFrame = 1;
                
            }
            else if(angle > 1.25 && angle < 1.75 && this.Owner.Sprite.SpriteSource != this.North)
            {
                
                this.Owner.Sprite.SpriteSource = this.North;
                selectedWeapon.Sprite.CurrentFrame = 2;
                
            }
            else if(angle > 1.75 && angle < 2.75 && this.Owner.Sprite.SpriteSource != this.NorthWest)
            {
                
                this.Owner.Sprite.SpriteSource = this.NorthWest;
                selectedWeapon.Sprite.CurrentFrame = 3;
                
            }
            else if(angle > 2.75 && angle > -2.75 && this.Owner.Sprite.SpriteSource != this.West)
            {
                
                this.Owner.Sprite.SpriteSource = this.West;
                selectedWeapon.Sprite.CurrentFrame = 4;
                
            }
            else if(angle > -2.75 && angle < -1.75 && this.Owner.Sprite.SpriteSource != this.SouthWest)
            {
                
                this.Owner.Sprite.SpriteSource = this.SouthWest;
                selectedWeapon.Sprite.CurrentFrame = 5;
                
            }
            else if(angle > -1.75 && angle < -1.25 && this.Owner.Sprite.SpriteSource != this.South)
            {
                
                this.Owner.Sprite.SpriteSource = this.South;
                selectedWeapon.Sprite.CurrentFrame = 6;
                
            }
            else if(angle > -1.25 && angle < -0.25 && this.Owner.Sprite.SpriteSource != this.SouthEast)
            {
                
                this.Owner.Sprite.SpriteSource = this.SouthEast;
                selectedWeapon.Sprite.CurrentFrame = 7;
                
            }
            if(this.Owner.PlayerShooting.Direction.X < 0.1 && this.Owner.PlayerShooting.Direction.Y < 0.1 && this.Owner.PlayerShooting.Direction.X > -0.1 && this.Owner.PlayerShooting.Direction.Y > -0.1)
            {
                
                this.Owner.Sprite.SpriteSource = this.South;
                selectedWeapon.Sprite.CurrentFrame = 6;
                
            }
        }
        
        
        
        if(this.Owner.Sprite.AnimationActive)
        {
            
            /*if(this.BounceEffect >= 0.2)
            {
                this.BounceDirection = false;
            }
            else if(this.BounceEffect <= 0) 
            {
                this.BounceDirection = true;
            }
            
            if(this.BounceDirection)
            {
                this.BounceEffect += 0.01;
                selectedWeapon.Transform.Translation += Real3(0, this.BounceEffect, 0);
            }
            
            if(!this.BounceDirection)
            {
                this.BounceEffect -= 0.01;
                selectedWeapon.Transform.Translation -= Real3(0, this.BounceEffect, 0);
            }*/
            
            /*if(this.BounceEffect < 2 && this.BounceEffect >= 0)
            {
                this.BounceEffect += 0.2;
                selectedWeapon.Transform.Translation += Real3(0, 0.01, 0);
            }
            
            if(this.BounceEffect > 2)
            {
                this.BounceEffect = -0.01;
            }
            else if(this.BounceEffect < -2)
            {
                this.BounceEffect = 0.01;
            }
            
            if(this.BounceEffect < 0 && this.BounceEffect > -2)
            {
                this.BounceEffect -= 0.2;
                selectedWeapon.Transform.Translation -= Real3(0, 0.01, 0);
            }*/
            
            if(this.Owner.Sprite.CurrentFrame % 2 == 0)
            {
                selectedWeapon.Transform.Translation = Real3(0, 0.02, 0);
            }
            else
            {
                selectedWeapon.Transform.Translation = Real3(0, -0.02, 0);
            }
            
        }
        this.Shooting = false;
    }
}
