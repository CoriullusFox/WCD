/* ----------------------------------------------------------------------------
** TEAM - We Couldn't Decide
** © 2017 DigiPen Institute of Technology, All Rights Reserved.
**
** FILE NAME
**
** Author:
** - Sage Dupuy
**
** Contributors:
** - none
** --------------------------------------------------------------------------*/

class Teleporter : ZilchComponent
{
    [Property]
    var Position : CogPath = null;
    
    [Property]
    var Proximity : Real = 1;
    
    [Property]
    var TeleportingEffect : Archetype = Archetype.TeleEffect;
    
    var Teleported : Boolean = false;
    
    var CoolDown : Real = 0.0;
    
    var CoolDownMax : Real = 0.75;
    
    var RanOnce : Boolean = false;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }
    
    function OnLogicUpdate(event : UpdateEvent)
    {
        var player = this.Space.FindObjectByName("TempPlayer");
        
        var distanceFromPlayer = Math.Distance(player.Transform.Translation, this.Owner.Transform.Translation);
        
        
        
        //if distanceFromPlayer is less than Proximity and Teleported is equal to false
        if(distanceFromPlayer < this.Proximity && this.Teleported == false)
        {
            this.CoolDown += event.Dt;
            
            this.Owner.Sprite.AnimationActive = true;
            
            this.Space.FindObjectByName("`this.Position.Cog.Name`").Teleporter.Teleported = true;
            
            if(this.Owner.Sprite.CurrentFrame == 5)
            {
                if(!this.RanOnce)
                {
                    this.Space.SoundSpace.PlayCue(SoundCue.Find("Environment_Appear"));
                    
                    this.Space.CreateAtPosition(this.TeleportingEffect, this.Owner.Transform.Translation + Real3(0,0,0.1));
                    
                    this.RanOnce = true;
                }
                
                player.Sprite.Visible = false;
                
                player.FindChildByName("Weapon").Sprite.Visible = false;
                
                player.RigidBody.Velocity = Real3(0.0,0.0,0.0);
                
                if(this.CoolDown >= this.CoolDownMax)
                {
                    //Set player's position to Position
                    this.Space.CreateAtPosition(this.TeleportingEffect, this.Position.Cog.Transform.Translation + Real3(0,0,0.1));
                    player.Transform.Translation = this.Position.Cog.Transform.Translation;
                    player.Sprite.Visible = true;
                    player.FindChildByName("Weapon").Sprite.Visible = true;
                    
                    this.CoolDown = 0.0;
                    
                    this.RanOnce = false;
                }
            }
        }
        //if distanceFromPlayer is greater than Proximity and Teleported is equal to true
        if(distanceFromPlayer > this.Proximity && this.Teleported == true)
        {
            this.Owner.Sprite.AnimationActive = false;
            
            this.Space.FindObjectByName("`this.Position.Cog.Name`").Teleporter.Teleported = false;
            
            this.Teleported = false;
        }
        else if(distanceFromPlayer > this.Proximity)
        {
            this.Owner.Sprite.CurrentFrame = 0;
            
            this.Owner.Sprite.AnimationActive = false;
        }
    }
}