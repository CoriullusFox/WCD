/* ----------------------------------------------------------------------------
** TEAM - We Couldn't Decide
** © 2017 DigiPen Institute of Technology, All Rights Reserved.
**
** FILE NAME
**
** Author:
** - Sage Dupuy
**
** Contributors:
** - Brandon
** --------------------------------------------------------------------------*/

class Doorscript : ZilchComponent
{
    [Property]
    var DoorOpening : SpriteSource = null;
    
    [Property]
    var DoorClosing : SpriteSource = null;
    
    [Property]
    var DoorAnimationSpeed : Real = 80;
    
    [Property]
    var Locked : Boolean = false;
    
    [Property]
    var Condition : String = "Chioces: EnemiesKilled, Key, None";
    
    [Property]
    var EnemyDeathUnlockNumber : Integer = 0;
    
    [Property]
    var RequiredEnemiesKilled : Real = 3;
    
    [Property]
    var LockedVisual : SpriteSource = null;
    
    var UnlockedVisual : SpriteSource = null;
    
    var TotalEnemies : Integer = 0;
    
    var EntityDetected : Boolean = false;
    
    var RanOnce : Boolean = false;
    
    var Once : Boolean = false;
    function Initialize(init : CogInitializer)
    {
        this.UnlockedVisual = this.Owner.Sprite.SpriteSource;
        
        this.Owner.Sprite.AnimationActive = false;
        
        this.Owner.Sprite.AnimationSpeed = this.DoorAnimationSpeed;
        
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        var filter : CastFilter = CastFilter();
        filter.IgnoreKinematic = true;
        filter.IgnoreStatic = true;
        filter.IgnoreGhost = true;
        filter.IgnoreChildren = true;
        filter.IgnoreDynamic = false;
        this.EntityDetected = false;
        
        var cast = this.Space.PhysicsSpace.CastSphereResults(this.Owner.Transform.Translation,1.5,10, filter);
        
        while(!cast.Empty())
        {
            if(cast.Current.ObjectHit.Name == "TempPlayer" || cast.Current.ObjectHit.Name == "Enemy")
            {
                this.RanOnce = false;
                this.EntityDetected = true;
                break;
            }
            else
            {
                this.RanOnce = false;
                this.EntityDetected = false;
            }
            cast.PopFront();
        }
        
        if(this.Condition == "EnemiesKilled")
        {
            if(this.LevelSettings.EnemiesKilldstor.EnemiesKilled >= this.RequiredEnemiesKilled)
            {
                this.Locked = false;
            }
            else
            {
                this.Locked = true;
            }
        }
        else if(this.Condition == "Key")
        {
            this.Locked = true;
        }
        else
        {
            this.Locked = false;
        }
        
        if(this.Locked)
        {
            this.Owner.Sprite.SpriteSource = this.LockedVisual;
            this.Once = true;
        }
        else if(this.Once)
        {
            this.Owner.Sprite.SpriteSource = this.UnlockedVisual;
            this.Once = false;
        }
        
        if(this.EntityDetected)
        {
            if(this.Owner.Sprite.SpriteSource != this.DoorOpening)
            {
                if(!this.Locked)
                {
                    this.Owner.BoxCollider.Ghost = true;
                    this.Owner.BoxCollider.SendsEvents = false;
                    this.Owner.Sprite.CurrentFrame = 0;
                    this.Owner.Sprite.SpriteSource = this.DoorOpening;
                    this.Owner.Sprite.AnimationActive = true;
                }
            }
        }
        else if(this.Owner.Sprite.SpriteSource != this.DoorClosing)
        {
            this.Owner.BoxCollider.Ghost = false;
            this.Owner.BoxCollider.SendsEvents = true;
            this.Owner.Sprite.CurrentFrame = 0;
            if(!this.Locked)
            {
                this.Owner.Sprite.SpriteSource = this.DoorClosing;
            }
            this.Owner.Sprite.AnimationActive = true;
        }
    }
}
