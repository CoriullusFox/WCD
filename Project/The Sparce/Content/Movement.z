/* ----------------------------------------------------------------------------
** TEAM - We Couldn't Decide
** © 2017 DigiPen Institute of Technology, All Rights Reserved.
**
** FILE NAME
**
** Author:
** - Brandon Wolenetz
**
** Contributors:
** - Hudson Green
** --------------------------------------------------------------------------*/

class Movement : ZilchComponent
{
    [Property]
    var Speed : Real = 10;
    [Property]
    var RunSpeed : Real = 10;
    [Property]
    var RunEnergy : Real = 35;
    [Property]
    var EmptyRunEnergyDamage : Real = 0.1;
    //[Property]
    //var Scale : Real3 = Real3(4, 4, 4);
    
    // DEFAULT IS FACING DOWN
    var CurrentDirection : Real3 = Real3(0, -1, 0);
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        this.Owner.RigidBody.Velocity = Real3(0,0,0);
        var r3Speed = Real3(0,0,0);
        var velocity = this.Owner.RigidBody.Velocity;
        
        //if pressing shift
        if(Zero.Keyboard.KeyIsDown(Keys.Shift) && velocity.X < 0.2 && velocity.Y < 0.2)
        {
            //if energy is not depleted
            if(this.Owner.EnergyStor.Energy >= 1.0)
            {
                //deplete energy by RunEnergy
                this.Owner.EnergyStor.Energy -= event.Dt * this.RunEnergy;
                
                r3Speed = Real3(this.RunSpeed * event.Dt, this.RunSpeed * event.Dt, this.RunSpeed * event.Dt);
            }
            else
            {
                r3Speed = Real3(this.Speed *event.Dt, this.Speed *event.Dt, this.Speed *event.Dt);
            }
        }
        else
        {
            r3Speed = Real3(this.Speed *event.Dt, this.Speed *event.Dt, this.Speed *event.Dt);
        }
        if(Zero.Keyboard.KeyIsDown(Keys.A) && Zero.Keyboard.KeyIsDown(Keys.S))
        {
            this.Owner.RigidBody.Velocity = Real3(-0.5,-0.5,0) * r3Speed;
            //this.CurrentDirection = Real3(-0.15, -0.25, 0) * this.Scale;
        }
        else if(Zero.Keyboard.KeyIsDown(Keys.D) && Zero.Keyboard.KeyIsDown(Keys.S))
        {
            this.Owner.RigidBody.Velocity = Real3(0.5,-0.5,0) * r3Speed;
            //this.CurrentDirection = Real3(0.38, -0.25, 0) * this.Scale;
        }
        else if(Zero.Keyboard.KeyIsDown(Keys.A) && Zero.Keyboard.KeyIsDown(Keys.W))
        {
            this.Owner.RigidBody.Velocity = Real3(-0.5,0.5,0) * r3Speed;
            //this.CurrentDirection = Real3(-0.35, 0.1, 0) * this.Scale;
        }
        else if(Zero.Keyboard.KeyIsDown(Keys.D) && Zero.Keyboard.KeyIsDown(Keys.W))
        {
            this.Owner.RigidBody.Velocity = Real3(0.5,0.5,0) * r3Speed;
            //this.CurrentDirection = Real3(0.35, 0.1, 0) * this.Scale;
        }
        else if(Zero.Keyboard.KeyIsDown(Keys.W))
        {
            this.Owner.RigidBody.Velocity = Real3(0,1,0) * r3Speed;
            //this.CurrentDirection = Real3(-0.35, 0.3, 0) * this.Scale;
        }
        else if(Zero.Keyboard.KeyIsDown(Keys.A))
        {
            this.Owner.RigidBody.Velocity = Real3(-1,0,0) * r3Speed;
            //this.CurrentDirection = Real3(-0.42, -0.08, 0) * this.Scale;
        }
        else if(Zero.Keyboard.KeyIsDown(Keys.S))
        {
            this.Owner.RigidBody.Velocity = Real3(0,-1,0) * r3Speed;
            //this.CurrentDirection = Real3(0.25, -0.25, 0) * this.Scale;
        }
        else if(Zero.Keyboard.KeyIsDown(Keys.D))
        {
            this.Owner.RigidBody.Velocity = Real3(1,0,0) * r3Speed;
            //this.CurrentDirection = Real3(0.42, -0.08, 0) * this.Scale;
        }
        else
        {
            this.Owner.RigidBody.Velocity = Real3(0,0,0);
        }
        
    }
}
